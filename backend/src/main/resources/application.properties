# Application Configuration
server.port=8080

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.upload.max-file-size=10485760

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.generate_statistics=false

# Hibernate Validation
spring.jpa.properties.jakarta.persistence.validation.mode=none

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=false

# Telegram Configuration
telegram.bot.token=${TELEGRAM_BOT_TOKEN:your_bot_token}
telegram.bot.username=${TELEGRAM_BOT_USERNAME:your_bot_name}
telegram.webapp.url=${TELEGRAM_WEBAPP_URL}
telegram.auth.redirect-url=${TELEGRAM_AUTH_REDIRECT_URL}

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.yourapp=INFO
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type=ERROR
logging.level.org.hibernate.type.descriptor.sql=ERROR
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO

# Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.display-request-duration=true

# JWT Configuration
jwt.expiration=86400000
# Используем стабильный секрет, представляющий собой base64-закодированную строку длиной 32 байта
jwt.secret=VGhpc0lzQVN0YWJsZUpXVFNlY3JldEZvclRoZUFwcGxpY2F0aW9u

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:5173
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Bean Configuration
spring.main.allow-bean-definition-overriding=true

# Настройка директории для статических ресурсов
spring.web.resources.static-locations=file:/uploads/,classpath:/static/
spring.mvc.static-path-pattern=/uploads/**

# Путь для загрузки файлов
app.upload.path=/uploads

# Настройки Hibernate для решения проблемы read-only транзакций
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.connection.isolation=2
spring.jpa.properties.hibernate.default_schema=public

# Настройки DataSource
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5